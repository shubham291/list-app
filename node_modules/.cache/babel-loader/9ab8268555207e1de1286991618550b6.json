{"ast":null,"code":"var _jsxFileName = \"/Users/sbabbar006/Documents/IVIEW/list-app/src/components/MainComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport get from \"../config/communication\";\nimport Home from \"./HomePage/Home\";\nimport User from \"./Users/User\";\nimport Post from \"./Posts/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainComponent() {\n  _s();\n\n  let initialState = {\n    posts: [],\n    comments: [],\n    users: [],\n    newArr: [],\n    view: \"allPost\",\n    individualUser: {},\n    replicaArr: [],\n    postArr: [],\n    postData: {}\n  };\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n    storeAllData();\n  }, []);\n\n  const storeAllData = async () => {\n    let posts = await get(\"posts\");\n    let users = await get(\"users\");\n    let comments = await get(\"comments\");\n    setState({ ...state,\n      posts,\n      users,\n      comments\n    });\n  };\n\n  useEffect(() => {\n    expensiveComputation();\n  }, [state.posts]);\n\n  const expensiveComputation = () => {\n    console.log(state, 'statee');\n    let newArr = [];\n    state.posts.map(el => {\n      state.users.find(elem => {\n        if (elem.id == el.userId) {\n          newArr.push({\n            title: el.title,\n            username: elem.username,\n            id: elem.id\n          });\n        }\n      });\n    });\n    setState({ ...state,\n      newArr,\n      replicaArr: newArr\n    });\n  };\n\n  const onChangeView = (e, i, name) => {\n    e.preventDefault();\n\n    if (state.view == \"allPost\") {\n      if (name == \"username\") {\n        let user = state.users.find(el => {\n          console.log(el.id, 'ellelelele', i);\n\n          if (el.id == i) {\n            return el;\n          }\n        });\n        setState({ ...state,\n          view: \"users\",\n          individualUser: [user]\n        });\n      } else if (name == \"post\") {\n        let postData = state.newArr.find(el => {\n          if (el.title == i) {\n            return el;\n          }\n        });\n        let post = [];\n        state.comments.find(el => {\n          if (el.postId == i) {\n            post = [...post, el];\n          }\n        });\n        console.log(postData, 'post');\n        setState({ ...state,\n          view: \"Post\",\n          postArr: post,\n          postData\n        });\n      }\n    } else if (state.view == \"users\") {\n      setState({ ...state,\n        view: \"allPost\"\n      });\n    }\n  };\n\n  const onSearch = e => {\n    let value = e.target.value;\n\n    if (value && state.newArr.length) {\n      let filteredArr = state.newArr.filter(el => {\n        if (el.username.toLowerCase().includes(value.toLowerCase())) {\n          return el;\n        }\n      });\n      setState({ ...state,\n        newArr: filteredArr\n      });\n    } else if (value == \"\") {\n      setState({ ...state,\n        newArr: state.replicaArr\n      });\n    }\n  }; // console.log(state, 'posts')\n\n\n  const props = {\n    newArr: state.newArr,\n    onChangeView: onChangeView,\n    view: state.view\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.view == \"allPost\" ? /*#__PURE__*/_jsxDEV(Home, { ...props,\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 40\n    }, this) : state.view == \"Post\" ? /*#__PURE__*/_jsxDEV(Post, { ...props,\n      postArr: state.postArr,\n      postData: state.postData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 105\n    }, this) : /*#__PURE__*/_jsxDEV(User, {\n      individualUser: state.individualUser,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 176\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainComponent, \"pdyGCmlY7TRGX76jdogJFnbHPh8=\");\n\n_c = MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"sources":["/Users/sbabbar006/Documents/IVIEW/list-app/src/components/MainComponent.js"],"names":["React","useState","useEffect","get","Home","User","Post","MainComponent","initialState","posts","comments","users","newArr","view","individualUser","replicaArr","postArr","postData","state","setState","storeAllData","expensiveComputation","console","log","map","el","find","elem","id","userId","push","title","username","onChangeView","e","i","name","preventDefault","user","post","postId","onSearch","value","target","length","filteredArr","filter","toLowerCase","includes","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport get from \"../config/communication\"\nimport Home from \"./HomePage/Home\"\nimport User from \"./Users/User\";\nimport Post from \"./Posts/Post\"\n\nexport default function MainComponent() {\n    let initialState = {\n        posts: [],\n        comments: [],\n        users: [],\n        newArr: [],\n        view: \"allPost\",\n        individualUser: {},\n        replicaArr: [],\n        postArr: [],\n        postData: {}\n    }\n    const [state, setState] = useState(initialState)\n    useEffect(() => {\n        storeAllData()\n    }, [])\n    const storeAllData = async () => {\n        let posts = await get(\"posts\")\n        let users = await get(\"users\")\n        let comments = await get(\"comments\")\n        setState({ ...state, posts, users, comments })\n    }\n    useEffect(() => {\n        expensiveComputation()\n    }, [state.posts])\n    const expensiveComputation = () => {\n        console.log(state, 'statee')\n        let newArr = []\n        state.posts.map((el) => {\n            state.users.find((elem) => {\n                if (elem.id == el.userId) {\n                    newArr.push({ title: el.title, username: elem.username, id: elem.id })\n                }\n            })\n        })\n        setState({ ...state, newArr, replicaArr: newArr })\n    }\n\n    const onChangeView = (e, i, name) => {\n        e.preventDefault()\n        if(state.view == \"allPost\"){\n            if (name ==\"username\") {\n                let user = state.users.find((el) => {\n                    console.log(el.id, 'ellelelele', i)\n                    if (el.id == i) {\n                        return el\n                    }\n                })\n                setState({ ...state, view: \"users\", individualUser: [user] })\n            }\n            else if(name == \"post\") {\n                let postData = state.newArr.find((el) => {\n                    if(el.title == i){\n                        return el\n                    }\n                })\n                let post = []\n                state.comments.find((el) => {\n                    if(el.postId == i){\n                        post = [...post,el] \n                    }\n                })\n                console.log(postData,'post')\n                setState({ ...state, view: \"Post\" ,postArr : post,postData})\n            }\n        }\n          else if (state.view == \"users\") {\n            setState({ ...state, view: \"allPost\" })\n        }\n    }\n\n    const onSearch = (e) => {\n        let value = e.target.value\n        if (value && state.newArr.length) {\n            let filteredArr = state.newArr.filter((el) => {\n                if (el.username.toLowerCase().includes(value.toLowerCase())) {\n                    return el\n                }\n            })\n            setState({ ...state, newArr: filteredArr })\n        } else if (value == \"\") {\n            setState({ ...state, newArr: state.replicaArr })\n        }\n    }\n\n    // console.log(state, 'posts')\n    const props = {\n        newArr: state.newArr,\n        onChangeView: onChangeView,\n        view: state.view\n    }\n    return (\n        <div>\n            {state.view == \"allPost\" ? <Home {...props} onSearch={onSearch} /> : state.view == \"Post\" ? <Post {...props} postArr={state.postArr} postData={state.postData}/> : <User individualUser={state.individualUser} {...props} />}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}