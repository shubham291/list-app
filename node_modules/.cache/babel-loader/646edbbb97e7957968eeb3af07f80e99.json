{"ast":null,"code":"var _jsxFileName = \"/Users/sbabbar006/Documents/IVIEW/list-app/src/components/MainComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport get from \"../config/communication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainComponent() {\n  _s();\n\n  let initialState = {\n    posts: [],\n    comments: [],\n    users: [],\n    newArr: []\n  };\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n    storeAllData();\n  }, []);\n\n  const storeAllData = async () => {\n    let posts = await get(\"posts\");\n    let users = await get(\"users\");\n    let comments = await get(\"comments\");\n    setState({ ...state,\n      posts,\n      users,\n      comments\n    });\n  };\n\n  useEffect(() => {\n    expensiveComputation();\n  }, [state]);\n\n  const expensiveComputation = () => {\n    console.log(state, 'statee');\n    let newArr = [];\n    state.posts.map(el => {\n      state.users.find(elem => {\n        if (elem.id == el.userId) {\n          newArr.push({\n            title: el.title,\n            username: elem.username\n          });\n        }\n      });\n    });\n    setState({ ...state,\n      newArr\n    });\n  }; // console.log(state, 'posts')\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: state.newArr.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 38\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainComponent, \"pdyGCmlY7TRGX76jdogJFnbHPh8=\");\n\n_c = MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"sources":["/Users/sbabbar006/Documents/IVIEW/list-app/src/components/MainComponent.js"],"names":["React","useState","useEffect","get","MainComponent","initialState","posts","comments","users","newArr","state","setState","storeAllData","expensiveComputation","console","log","map","el","find","elem","id","userId","push","title","username","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAGA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,MAAIC,YAAY,GAAG;AACfC,IAAAA,KAAK,EAAE,EADQ;AAEfC,IAAAA,QAAQ,EAAE,EAFK;AAGfC,IAAAA,KAAK,EAAE,EAHQ;AAIfC,IAAAA,MAAM,EAAC;AAJQ,GAAnB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACI,YAAD,CAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY;AAEf,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAMA,YAAY,GAAG,YAAY;AAC7B,QAAIN,KAAK,GAAG,MAAMH,GAAG,CAAC,OAAD,CAArB;AACA,QAAIK,KAAK,GAAG,MAAML,GAAG,CAAC,OAAD,CAArB;AACA,QAAII,QAAQ,GAAG,MAAMJ,GAAG,CAAC,UAAD,CAAxB;AACAQ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYJ,MAAAA,KAAZ;AAAmBE,MAAAA,KAAnB;AAA0BD,MAAAA;AAA1B,KAAD,CAAR;AAEH,GAND;;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,oBAAoB;AACvB,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;;AAGA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkB,QAAlB;AACJ,QAAID,MAAM,GAAG,EAAb;AACIC,IAAAA,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBC,EAAD,IAAQ;AACpBP,MAAAA,KAAK,CAACF,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAU;AACvB,YAAIA,IAAI,CAACC,EAAL,IAAWH,EAAE,CAACI,MAAlB,EAA0B;AACtBZ,UAAAA,MAAM,CAACa,IAAP,CAAY;AAACC,YAAAA,KAAK,EAAEN,EAAE,CAACM,KAAX;AAAmBC,YAAAA,QAAQ,EAAEL,IAAI,CAACK;AAAlC,WAAZ;AACH;AACJ,OAJD;AAKH,KAND;AAOAb,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYD,MAAAA;AAAZ,KAAD,CAAR;AACH,GAXD,CAtBoC,CAoCpC;;;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACA;AAAA,gCACQ;AAAA,iCACI;AAAA,oCACI;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADR,eAWQ;AAAA,oBAEKC,KAAK,CAACD,MAAN,CAAaO,GAAb,CAAiB,CAACS,IAAD,EAAOC,CAAP,KAAa;AACzB,gCAAO;AAAA,sCACH;AAAA,0BAAKD,IAAI,CAACF;AAAV;AAAA;AAAA;AAAA;AAAA,sBADG,eAEH;AAAA,0BAAKE,IAAI,CAACD;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAKL,WANA;AAFL;AAAA;AAAA;AAAA;AAAA,gBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAnEuBpB,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport get from \"../config/communication\"\n\n\nexport default function MainComponent() {\n    let initialState = {\n        posts: [],\n        comments: [],\n        users: [],\n        newArr:[]\n    }\n    const [state, setState] = useState(initialState)\n    useEffect(() => {\n        storeAllData()\n        \n    }, [])\n    const storeAllData = async () => {\n        let posts = await get(\"posts\")\n        let users = await get(\"users\")\n        let comments = await get(\"comments\")\n        setState({ ...state, posts, users, comments })\n        \n    }\n    useEffect(() => {\n        expensiveComputation()\n    }, [state])\n    const expensiveComputation = () => {\n        console.log(state,'statee')\n    let newArr = []\n        state.posts.map((el) => {\n            state.users.find((elem) => {\n                if (elem.id == el.userId) {\n                    newArr.push({title: el.title , username: elem.username })\n                }\n            })\n        })\n        setState({ ...state, newArr })\n    }\n\n\n    // console.log(state, 'posts')\n    return (\n        <div>\n            <h1>All Posts</h1>\n            <div>\n            <table>\n                    <thead>\n                        <tr>\n                            <td>\n                                <h3>Title</h3>\n                            </td>\n                            <td>\n                                <h3>User Name</h3>\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        \n                        {state.newArr.map((item, i) => {\n                              return <tr>\n                                  <td>{item.title}</td>\n                                  <td>{item.username}</td>\n                                  </tr>\n                            \n                        })}\n                        \n                        </tbody>\n                </table>\n                </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}